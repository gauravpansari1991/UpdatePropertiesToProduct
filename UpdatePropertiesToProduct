using System;
using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Stylelabs.M.Base.Querying;
using Stylelabs.M.Base.Querying.Filters;
using Stylelabs.M.Framework.Essentials.LoadConfigurations;
using Stylelabs.M.Framework.Essentials.LoadOptions;
using Stylelabs.M.Sdk.Contracts.Base;
using CsvHelper;
using System.Globalization;
using CsvHelper.Configuration.Attributes;

List<string> productNames = new List<string>();
var records = //read from csv or others
foreach (var record in records)
{
  productNames.Add(record.ProductName);
}

ContentHubClientFactory _clientFactory = new ContentHubClientFactory();
var mClient = _clientFactory.CreateClient();

int roundNum = 0;
foreach (var productName in productNames)
{
  Console.WriteLine($"ProductName  {productName}");
  var productQuery = new Query
  {
      Filter = new CompositeQueryFilter()
      {
          Children = new QueryFilter[] {
              new DefinitionQueryFilter {
                  Name =  CustomConstants.Product.Defintion
              },
                  new PropertyQueryFilter {
                  Property = CustomConstants.Product.Fields.ProductName,
                  Value = productName,
                  DataType = FilterDataType.String
              }
          },
          CombineMethod = CompositeFilterOperator.And
      }
  };

  System.Globalization.CultureInfo fiCultureInfo = new System.Globalization.CultureInfo("fi-FI"); //change culture here


  EntityLoadConfiguration propertyLoadConfig = new EntityLoadConfiguration()
  {
      PropertyLoadOption = PropertyLoadOption.All,
      CultureLoadOption = CultureLoadOption.All
  };

  var productQueryResult = await mClient.Querying.QueryIdsAsync(productQuery);

  if ((productQueryResult?.Items.Count > 0))
  {
      long? productId = productQueryResult?.Items.ToList().FirstOrDefault();
      Console.WriteLine($"ProductId  {productId}");
      var _product = await mClient.Entities.GetAsync(productId.Value, propertyLoadConfig);

      if (_product != null)
      {
          var props = ((Stylelabs.M.Sdk.Models.Base.EntityBase)_product).Properties;
          var contentHubProperties = props.Select(x => x.Name).Distinct();

          CHProduct matchedRecord = new CHProduct(); //create a CHProduct class
          foreach (var propertyKey in contentHubProperties)
          {
              object propertyValue = null;
              if (propertyKey == "ProductName")
              {
                  var productNameInCH = GetMultiLanguagePropertyValue<object>(_product, propertyKey, fiCultureInfo);
                  matchedRecord = records.FirstOrDefault(i => i.ProductName.Equals(productNameInCH));
              }
          }

          if (matchedRecord != null)
          {
              _product.SetPropertyValue("ModelTitle", fiCultureInfo, matchedRecord.ModelTitle); //update fields that you want to update in content hub                           
          }

          roundNum++;

          await mClient.Entities.SaveAsync(_product).ConfigureAwait(false);

      }
      else
      {
          Console.WriteLine($"productName not found  {productName}");
      }
  }
}
Console.WriteLine($"total Product :  {roundNum}");
